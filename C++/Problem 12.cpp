/*
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/
#include <iostream>
#include <math.h>
using namespace std;

int GetNumFactors(long long num) {

    int countFactors = 2;
    for(int i = 2; i < sqrt(num); i++) {

        if(num % i == 0) {
            if(num / i == i) countFactors += 1;
            else countFactors += 2;
            //cout << i << endl;
        }
    }
    return countFactors;
}

int main() {

    for(int i = 2; i < 4000000; i += 2) {
        if(GetNumFactors(i) >= 500) {
            cout << i;
            break;
        }
    }

    return 0;
}


//Horribly unoptimized, and not working (at least up to the current max)


